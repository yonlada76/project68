<!-- หน้าหลักของเจ้าหน้าที่ทำการ -->
<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>ระบบยืม–คืนอุปกรณ์กีฬา</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Prompt:wght@400;600&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

  <style>
       body{font-family:'Prompt',sans-serif;background:#f8f9fa;min-height:100vh;display:flex;align-items:center;justify-content:center}
    .container-box{background:#fff;border-radius:16px;padding:28px;box-shadow:0 4px 12px rgba(0,0,0,.08);max-width:440px;width:100%}
    .topbar{display:flex;align-items:center;justify-content:space-between;margin-bottom:12px}
    .menu-grid{display:grid;grid-template-columns:repeat(2,1fr);gap:16px}
    .menu-item{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:18px 10px;border:1px solid #eee;border-radius:14px;background:#fff;box-shadow:0 2px 6px rgba(0,0,0,.05);text-decoration:none;color:#333;transition:.25s}
    .menu-item i{font-size:40px;margin-bottom:8px}
    .menu-item span{font-weight:500}
    .hint{font-size:.9rem;color:#6c757d;margin-top:10px}
    #reader{min-height:260px}
    /* badge กลม ๆ ซ้อนบนปุ่ม */
    .btn-icon-badge{position:relative}
    .btn-icon-badge .badge{
      position:absolute;top:-6px;right:-6px;border-radius:999px;padding:.25rem .45rem;font-size:.7rem
    }
  </style>
</head>
<body>
  <div class="container-box">
    <!-- แถบบน: กระดิ่งแจ้งเตือน + ออกจากระบบ -->
    <div class="topbar">
      <div class="d-flex align-items-center gap-2">
        <button id="btnOpenNotif" class="btn btn-outline-secondary btn-sm btn-icon-badge" type="button"
                data-bs-toggle="offcanvas" data-bs-target="#notifPanel" aria-controls="notifPanel" title="แจ้งเตือน">
          <i class="bi bi-bell"></i>
          <span id="notifBadge" class="badge text-bg-danger d-none">0</span>
        </button>
      </div>
      <form action="/staff-login" method="post" class="m-0">
        <button class="btn btn-outline-danger btn-sm" type="submit">
          <i class="bi bi-box-arrow-right me-1"></i> ออกจากระบบ
        </button>
      </form>
    </div>
    
    <h2>ระบบการยืม–คืน<br>อุปกรณ์กีฬาและการเข้าใช้ยิม</h2>
  
    <div class="menu-grid">
      <a href="#" class="menu-item" data-next="/borrow">
        <i class="bi bi-file-earmark-plus"></i>
        <span>การยืม</span>
      </a>
      <a href="#" class="menu-item" data-next="/return">
        <i class="bi bi-clipboard-check"></i>
        <span>การคืน</span>
      </a>
      <a href="#" class="menu-item" data-next="/fitness">
        <i class="bi bi-bicycle"></i>
        <span>ฟิตเนส</span>
      </a>

      <a href="/staff/inventory" class="menu-item">
        <i class="bi bi-box-seam"></i>
        <span>อุปกรณ์</span>
      </a>
      <a href="/members" class="menu-item">
      <i class="bi bi-people"></i>
      <span>รายชื่อสมาชิก</span>
      </a>
      <a href="/history" class="menu-item">
        <i class="bi bi-clock-history"></i>
        <span>รายการยืม-คืน</span>
      </a>
    </div>
    <div class="hint">แตะ “การยืม/การคืน/ฟิตเนส” ระบบจะเปิดกล้องเพื่อสแกน QR สมาชิก</div>
  </div>

  <!-- Offcanvas ศูนย์แจ้งเตือน -->
  <div class="offcanvas offcanvas-end" tabindex="-1" id="notifPanel" aria-labelledby="notifPanelLabel">
    <div class="offcanvas-header">
      <h5 id="notifPanelLabel" class="mb-0">แจ้งเตือน</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="ปิด"></button>
    </div>
    <div class="offcanvas-body p-0 d-flex flex-column">
      <div class="p-3 border-bottom d-flex gap-2">
        <button id="btnRefreshNotif" class="btn btn-outline-secondary btn-sm">
          <i class="bi bi-arrow-clockwise me-1"></i> รีเฟรช
        </button>
        <button id="btnMarkAllRead" class="btn btn-outline-primary btn-sm">
          <i class="bi bi-check2-all me-1"></i> ทำเป็นอ่านแล้วทั้งหมด
        </button>
      </div>
      <div id="notifList" class="list-group list-group-flush small">
        <!-- รายการแจ้งเตือนจะถูกเติมที่นี่ -->
      </div>
      <div class="p-3 text-center text-muted small border-top">
        อัปเดตล่าสุด: <span id="notifUpdatedAt">-</span>
      </div>
    </div>
  </div>

  <!-- Modal สแกนกล้อง -->
  <div class="modal fade" id="scanModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">สแกน QR สมาชิก</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ปิด"></button>
        </div>
        <div class="modal-body">
          <div class="d-flex gap-2 align-items-center mb-2">
            <select id="cameraSelect" class="form-select form-select-sm"></select>
            <button id="btnRefreshCams" class="btn btn-outline-secondary btn-sm" title="ค้นหากล้องใหม่">
              <i class="bi bi-arrow-clockwise"></i>
            </button>
          </div>
          <div id="reader"></div>
          <div class="d-flex gap-2 mt-3">
            <button id="btnManual" class="btn btn-outline-secondary w-100">ป้อนรหัสด้วยตนเอง</button>
            <button id="btnStop" class="btn btn-outline-danger">หยุดกล้อง</button>
          </div>
          <small class="text-muted d-block mt-2">
            สำหรับมือถือ iOS/Android ควรเปิดผ่าน HTTPS (เช่น ngrok) เพื่อให้เบราว์เซอร์ยอมเปิดกล้อง
          </small>
        </div>
      </div>
    </div>
  </div>

  <!-- libs -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://unpkg.com/html5-qrcode@2.3.8/minified/html5-qrcode.min.js"></script>
  <script>
    /* =========================
       สแกน QR (เหมือนเดิม)
    ========================= */
    const scanModalEl = document.getElementById('scanModal');
    const scanModal   = new bootstrap.Modal(scanModalEl);
    const cameraSelect= document.getElementById('cameraSelect');

    let html5Qrcode = null;
    let targetNext = null;
    let wantStart  = false;
    let handled    = false;
    let currentCamId = null;

    scanModalEl.addEventListener('shown.bs.modal', async () => {
      if (wantStart) {
        wantStart = false;
        await ensureCameraList();
        await startScanner();
      }
    });

    scanModalEl.addEventListener('hidden.bs.modal', stopScanner);

    document.querySelectorAll('.menu-item[data-next]').forEach(el => {
      el.addEventListener('click', (e) => {
        e.preventDefault();
        targetNext = el.dataset.next; // /borrow /return /fitness
        handled = false;
        scanModal.show();
        wantStart = true;
      });
    });

    async function ensureCameraList() {
      try {
        const cams = await Html5Qrcode.getCameras();
        cameraSelect.innerHTML = '';
        cams.forEach((c, idx) => {
          const opt = document.createElement('option');
          opt.value = c.id;
          opt.textContent = c.label || `กล้อง ${idx+1}`;
          cameraSelect.appendChild(opt);
        });
        const back = cams.find(c => /back|rear|environment/i.test(c.label));
        if (back) cameraSelect.value = back.id;
        currentCamId = cameraSelect.value || (cams[0]?.id ?? null);
      } catch (err) {
        console.error('getCameras error', err);
      }
    }

    document.getElementById('btnRefreshCams').addEventListener('click', ensureCameraList);
    cameraSelect.addEventListener('change', async () => {
      currentCamId = cameraSelect.value;
      if (html5Qrcode?.isScanning) await startScanner(true);
    });

    async function startScanner(restart = false) {
      if (!currentCamId) await ensureCameraList();
      if (!currentCamId) return alert('ไม่พบอุปกรณ์กล้อง');

      if (!html5Qrcode) html5Qrcode = new Html5Qrcode('reader');
      else if (html5Qrcode.isScanning) await stopScanner();

      const cfg = { fps: 10, qrbox: { width: 240, height: 240 }, aspectRatio: 1.33 };

      const onSuccess = async (decodedText) => {
        if (handled) return;
        handled = true;
        try { await stopScanner(); } catch {}
        const code = (decodedText || '').trim();
        const nextUrl = `${targetNext}?member=${encodeURIComponent(code)}`;
        window.location.replace(nextUrl);
      };

      const onError = () => {};

      try {
        await html5Qrcode.start(currentCamId, cfg, onSuccess, onError);
      } catch (e) {
        console.error('start error', e);
        alert('ไม่สามารถเปิดกล้องได้: ' + (e?.message || e));
      }
    }

    async function stopScanner() {
      if (!html5Qrcode) return;
      if (html5Qrcode.isScanning) {
        try { await html5Qrcode.stop(); } catch {}
      }
      document.getElementById('reader').innerHTML = '';
    }

    document.getElementById('btnStop').addEventListener('click', stopScanner);
    document.getElementById('btnManual').addEventListener('click', async () => {
      const code = prompt('ใส่รหัสสมาชิก/QR:');
      if (code && targetNext) {
        await stopScanner();
        window.location.replace(`${targetNext}?member=${encodeURIComponent(code.trim())}`);
      }
    });

    /* =========================
       ศูนย์แจ้งเตือน (In-App)
    ========================= */
    const notifPanel   = document.getElementById('notifPanel');
    const notifListEl  = document.getElementById('notifList');
    const notifBadgeEl = document.getElementById('notifBadge');
    const notifUpdated = document.getElementById('notifUpdatedAt');

    let notifItems = [];
    let pollTimer  = null;

   async function fetchNotifications() {
  const res = await fetch('/api/notifications?limit=50', { credentials: 'same-origin' });
  const data = await res.json();
  notifItems = Array.isArray(data.items) ? data.items : [];
  renderNotifications();   // วาดรายการ
  updateBadge();           // อัปเดต badge จำนวนที่ยังไม่อ่าน
  notifUpdated.textContent = new Date(data.now || Date.now()).toLocaleString();
}

    function renderNotifications() {
      notifListEl.innerHTML = '';
      if (!notifItems.length) {
        notifListEl.innerHTML = `
          <div class="p-4 text-center text-muted">ยังไม่มีแจ้งเตือน</div>
        `;
        return;
      }
      notifItems.forEach(n => {
        const isRead = !!n.read_at;
        const item = document.createElement('a');
        item.href = '#';
        item.className = 'list-group-item list-group-item-action d-flex justify-content-between align-items-start';
        item.dataset.id = n.id;

        item.innerHTML = `
          <div class="me-2">
            <div class="fw-semibold ${isRead ? 'text-muted' : ''}">${escapeHTML(n.title || '(ไม่ระบุหัวข้อ)')}</div>
            <div class="text-muted">${escapeHTML(n.message || '')}</div>
            <div class="text-muted small mt-1">${new Date(n.created_at).toLocaleString()}</div>
          </div>
          <div class="ms-2 text-nowrap">
            ${isRead ? '<span class="badge text-bg-secondary">อ่านแล้ว</span>' : '<span class="badge text-bg-primary">ใหม่</span>'}
          </div>
        `;

        item.addEventListener('click', (ev) => {
          ev.preventDefault();
          // ถ้ามี meta.goto อาจพาไปหน้า history ได้
          try {
            const meta = n.meta && typeof n.meta === 'object' ? n.meta : (n.meta ? JSON.parse(n.meta) : null);
            if (meta?.goto) window.location.href = meta.goto;
          } catch {}
        });

        notifListEl.appendChild(item);
      });
    }

    function updateBadge() {
      const unread = notifItems.filter(n => !n.read_at).length;
      if (unread > 0) {
        notifBadgeEl.classList.remove('d-none');
        notifBadgeEl.textContent = unread > 99 ? '99+' : String(unread);
      } else {
        notifBadgeEl.classList.add('d-none');
      }
    }

    // ทำเป็นอ่านแล้วทั้งหมด
    async function markAllRead() {
      const ids = notifItems.filter(n => !n.read_at).map(n => n.id);
      if (!ids.length) return;
      try {
        const res = await fetch('/api/notifications/mark-read', {
          method: 'POST',
          headers: {'Content-Type':'application/json'},
          body: JSON.stringify({ ids })
        });
        if (!res.ok) throw new Error('mark read failed');
        // ปรับสถานะในฝั่งหน้าเว็บ
        notifItems = notifItems.map(n => n.read_at ? n : ({ ...n, read_at: new Date().toISOString() }));
        renderNotifications();
        updateBadge();
      } catch (e) {
        console.error(e);
      }
    }

    document.getElementById('btnRefreshNotif').addEventListener('click', fetchNotifications);
    document.getElementById('btnMarkAllRead').addEventListener('click', markAllRead);

    // โหลดครั้งแรก + ตั้ง interval 30 วิ
    fetchNotifications();
    pollTimer = setInterval(fetchNotifications, 30000);

    // ปิดแถบแล้วก็อัปเดตปุ่ม (เผื่อมีการเปลี่ยนแปลง)
    notifPanel.addEventListener('hidden.bs.offcanvas', updateBadge);

    function escapeHTML(s='') {
      return String(s).replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m]));
    }
  </script>
</body>
</html>